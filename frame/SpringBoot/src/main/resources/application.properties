# 默认的 8080 我们将它改成 8888
server.port=8888

# 未定义上下文路径之前 地址是 http://localhost:8888 定义了后 http://localhost:8888/lings 你能在tomcat做的事情，配置文件都可以
server.servlet.context-path=/lings
#配置项目的访问环境前缀值（这个设置了上面配置的访问路径就失效了,路径变为http://localhost:8888/dev）
#spring.profiles.active=dev

#在 IntelliJ IDEA 中使用 thymeleaf 模板的时候，发现每次修改静态页面都需要重启才生效，这点是很不友好的，
# 百度了下发现原来是默认配置搞的鬼，为了提高响应速度，默认情况下会缓存模板。
# 如果是在开发中请将spring.thymeleaf.cache 属性设置成 false。在每次修改静态内容时按Ctrl+Shift+F9即可重新加载了
spring.thymeleaf.cache=false

spring.datasource.url=jdbc:mysql://localhost:3306/lings?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=
#spring.datasource.type
#更多细微的配置可以通过下列前缀进行调整
#spring.datasource.hikari
#spring.datasource.tomcat
#spring.datasource.dbcp2
# JPA配置
#create： 每次运行程序时，都会重新创建表，故而数据会丢失
#create-drop： 每次运行程序时会先创建表结构，然后待程序结束时清空表
#upadte： 每次运行程序，没有表时会创建表，如果对象发生改变会更新表结构，原有数据不会清空，只会更新（推荐使用）
#validate： 运行程序会校验数据与数据库的字段类型是否相同，字段不同会报错
spring.jpa.hibernate.ddl-auto=update
# 输出日志
spring.jpa.show-sql=true
# 数据库类型
spring.jpa.database=mysql

# 如果想看到mybatis日志需要做如下配置
logging.level.com.springboot.lings=DEBUG
# 注意注意
mybatis.mapper-locations=classpath:com/springboot/lings/mapper/*.xml
#这种方式需要自己在resources目录下创建mapper目录然后存放xml
#mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.springboot.lings.entity
# 驼峰命名规范 如：数据库字段是  order_id 那么 实体字段就要写成 orderId
mybatis.configuration.map-underscore-to-camel-case=true

########## 通用Mapper ##########
# 主键自增回写方法,默认值MYSQL,详细说明请看文档
mapper.identity=MYSQL
mapper.mappers=tk.mybatis.mapper.common.BaseMapper
# 设置 insert 和 update 中，是否判断字符串类型!=''
mapper.not-empty=true
# 枚举按简单类型处理，如果有枚举字段则需要加上该配置才会做映射
mapper.enum-as-simple-type=true
########## 分页插件 ##########
pagehelper.helper-dialect=mysql
pagehelper.params=count=countSql
#分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页，
# pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询。
pagehelper.reasonable=false
#支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，
# 自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
pagehelper.support-methods-arguments=true

spring.redis.host=localhost
spring.redis.password=
# 连接超时时间（毫秒）
spring.redis.timeout=10000
# Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0
spring.redis.database=0
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0

my1.age=22
my1.name=battcn
